<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 加载jdbc.properties文件 -->
    <context:property-placeholder location="classpath:application.properties"/>

    <!-- 配置连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${spring.datasource.current.driver-class-name}"></property>
        <property name="jdbcUrl" value="${spring.datasource.current.jdbc-url}"></property>
        <property name="user" value="${spring.datasource.current.username}"></property>
        <property name="password" value="${spring.datasource.current.password}"></property>
    </bean>

    <!-- 配置事务核心管理器,封装了所有的事务操作,依赖于连接池 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置jdbc模板对象，这里直接使用Spring提供的模板，就不引入Mybatis了，比较这里主要关注的是 Spring 声明式事务的本质！！！ -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="userService" class="UserServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>

    <!--  配置事务处理的拦截器  -->
    <tx:advice id="transactionAdvice">
        <!--  指定不同方法的事务处理策略  -->
        <tx:attributes>
            <tx:method name="insertUser"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置AOP Advisor -->
    <aop:config>
        <!--  默认拦截 serviceImpl 的方法      -->
        <aop:pointcut id="defaultServiceOperation" expression="execution(* *ServiceImpl.*(..))"/>
        <aop:advisor pointcut-ref="defaultServiceOperation" advice-ref="transactionAdvice"/>
    </aop:config>


</beans>